% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_public_cells.R
\name{find_public_cells}
\alias{find_public_cells}
\title{Function searches for public cells and clones in vgm outputs created by the VDJ_GEX_matrix() function from platypus. The definition of a public cell can be provided in the input: define.public}
\usage{
find_public_cells(
  vgm,
  vdj_public,
  define.public,
  check.overlap.type,
  integrate.into.gex,
  vdj.only
)
}
\arguments{
\item{vgm}{output of VDJ_GEX_matrix function in platypus, first dataset (public cell/clone information will only be stored in vgm_1)}

\item{vdj_public}{vgm[[1]] of all public data used for comparison joined together (multiple datasets can be joined, no information is stored here)}

\item{define.public}{Character, defines which column(s) in the vgm[[1]] are used to define a public cell. Default is set to "VDJ_cdr3s_aa". Other options are: "VJ_cdr3s_aa", "VJ_cdr3s_aa.VDJ_cdr3s_aa", "VDJ_cdr3s_nt"}

\item{check.overlap.type}{Logical, defines if overlap type information should be stored in the new vgm. Default is set to FALSE, setting this to TRUE will increase computational time. (Information on cd3 overlaps on the aa level will be stored)}

\item{integrate.into.gex}{Logical, defines if the public cell/clone information should be integrated into the vgm[[[2]]. Default is to FALSE, if set to TRUE computational time increases significantly.}

\item{vdj.only}{Logical, if set to TRUE a vdj dataframe can be used as input (vgm = vdj_dataframe). A vdj dataframe with integrated public information is returned instead of a new vgm. Default is FALSE

Note: Aberrant numbers of V(D)J chains are filtered in the vgm}
}
\description{
In this function cdr3 sequences from a primary dataset (input: vgm) are compared to cdr3 sequences in a second (public) dataset (input: vdj_public).
}
\details{
For example if define.public = "VDJ_cdr3s_aa" is used (default), any cell from the primary dataset with a cdr3 heavy chain amino acid sequence matching any public cdrh3 aa sequence is marked as a public cell.
Also, all other cells which belong to the same clone (as the public cell) are marked as public clones.

This function returns a list containing in it's first element the new vgm with the added public status information and the second element containing a data frame of all clonotypes and their public status.


This function can be used to simply find public cells and clones within a dataset on the vdj (vmg[[1]]) level, or it can also integrate the "public" information into the gex (vgm[[2]]).
Integration into vgm[[2]] should only be done if gene expression of the public cells or public clones is analyzed afterwards, due to much longer computational time.


Definitions for define.public = "VDJ_cdr3s_aa":
If a cell in the first dataset and the public data (2nd dataset) have the exact same cdr3 heavy chain aa sequence, this cell is defined as a "public cell".
If any cell within a clonotype (defined by 10x default) is a public cell, this clonotype is defined as a "public clone". This information is stored additionally in the second list element of the output.


The public status information is stored in 6-7 newly created columns:
1. "overlap_type" - Character, indicating whether the cell has any CDR3 amino acid overlaps with the public data. Only created if check.overlap.type = TRUE
2. "public_definition" - Character, stores the information which was used to define a cell as public (e.g. the CDRH3 sequence)
3. "public" - Logical, if TRUE the corresponding cell in the df is defined as a public cell
4. "counts" - Integer, counts the number of cells in the "public" data
5. "nr_unique_sample_ids" - Integer, indicates in how many different samples from the public data cdrh3 matches are occurring. Indicates how "public" this cdr3h sequence really is. (In how many different mice or organs of the public data is a cell with the exact same cdrh3 aa seq. present)
6. "matches_barcode" - List, contains  barcodes of all cells within the public data which have the same cdrh3 sequence
7."public_clonotype" - Logical, if TRUE this cell belongs to a clonotype which has at least one public cell
}
