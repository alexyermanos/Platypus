% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/VDJ_GEX_matrix.R
\name{VDJ_GEX_matrix}
\alias{VDJ_GEX_matrix}
\title{Processes both raw VDJ and GEX Cellranger output to compile a single cell level table containing all available information for each cell.}
\usage{
VDJ_GEX_matrix(
  VDJ.out.directory.list,
  GEX.out.directory.list,
  VDJ.combine,
  GEX.integrate,
  integrate.GEX.to.VDJ,
  integrate.VDJ.to.GEX,
  exclude.GEX.not.in.VDJ,
  filter.overlapping.barcodes.GEX,
  filter.overlapping.barcodes.VDJ,
  exclude.on.cell.state.markers,
  get.VDJ.stats,
  numcores,
  trim.and.align,
  gap.opening.cost,
  gap.extension.cost,
  parallel.processing,
  integration.method,
  VDJ.gene.filter,
  mito.filter,
  norm.scale.factor,
  n.feature.rna,
  n.count.rna.min,
  n.count.rna.max,
  n.variable.features,
  cluster.resolution,
  neighbor.dim,
  mds.dim,
  subsample.barcodes,
  group.id
)
}
\arguments{
\item{VDJ.out.directory.list}{List containing paths to VDJ output directories from cell ranger. This pipeline assumes that the output file names have not been changed from the default 10x settings in the /outs/ folder. This is compatible with B and T cell repertoires (both separately and simultaneously).}

\item{GEX.out.directory.list}{Same as VDJ.out.directory, but for GEX. Order of list items must be the same as for VDJ.}

\item{VDJ.combine}{Boolean. Defaults to TRUE. Whether to integrate repertoires. A sample identifier will be appended to each barcode both in GEX as well as in VDJ. Recommended for all later functions}

\item{GEX.integrate}{Boolean. Defaults to TRUE. Whether to integrate GEX data. Default settings use the seurat scale.data option to integrate datasets. Sample identifiers will be appended to each barcode both in GEX and VDJ This is helpful when analysing different samples from the same organ or tissue, while it may be problematic when analysing different tissues.}

\item{integrate.GEX.to.VDJ}{Boolean. defaults to TRUE. Whether to integrate GEX metadata (not raw counts) into the VDJ output dataframe ! Only possible, if GEX.integrate and VDJ.combine are either both FALSE or both TRUE}

\item{integrate.VDJ.to.GEX}{Boolean. defaults to TRUE. Whether to integrate VDJ data into GEX seurat object as metadata. ! Only possible, if GEX.integrate and VDJ.combine are either both FALSE or both TRUE}

\item{exclude.GEX.not.in.VDJ}{Boolean. defaults to FALSE. Whether to delete all GEX cell entries, for which no VDJ information is available. Dependent on data quality and sequencing depth this may reduce the GEX cell count by a significant number}

\item{filter.overlapping.barcodes.GEX}{Boolean. defaults to TRUE. Whether to remove barcodes which are shared among samples in the GEX analysis. Shared barcodes normally appear at a very low rate.}

\item{filter.overlapping.barcodes.VDJ}{Boolean. defaults to TRUE. Whether to remove barcodes which are shared among samples in the GEX analysis. Shared barcodes normally appear at a very low rate.}

\item{get.VDJ.stats}{Boolean. defaults to TRUE. Whether to generate general statistics table for VDJ repertoires. This is appended as element [[3]] of the output list.}

\item{numcores}{Number of cores used for parallel processing. Defaults to number of cores available. If you want to chek how many cores are available use the library Parallel and its command detectCores() (Not setting a limit here when running this function on a cluster may cause a crash)}

\item{trim.and.align}{Boolean. defaults to FALSE. Whether to trim VJ/VDJ seqs, align them to the 10x reference and trim the reference. This is useful to get full sequences for antibody expression or numbers of somatic hypermutations. !Setting this to TRUE significantly increases computational time}

\item{gap.opening.cost}{Argument passed to Biostrings::pairwiseAlignment during alignment to reference. Defaults to 10}

\item{gap.extension.cost}{Argument passed to Biostrings::pairwiseAlignment during alignment to reference. Defaults to 4}

\item{parallel.processing}{Character string. Can be "parlapply" for Windows system, "mclapply" for unix and Mac systems or "none" to use a simple for loop (slow!). Default is "none" for compatibility reasons. For the parlapply option the packages parallel, doParallel and the dependency foreach are required}

\item{group.id}{vector with integers specifying the group membership. c(1,1,2,2) would specify the first two elements of the input VDJ/GEX lists are in group 1 and the third/fourth input elements will be in group 2.}

\item{exclude.on.cell.markers}{Character vector. If no input is provided or input is "none", no cells are excluded. Input format should follow: Character vector containing the gene names for each state. ; is used to use multiple markers within a single gene state. Different vector elements correspond to different states. Example: c("CD4+;CD44-","CD4+;IL7R+;CD44+"). All cells which match any of the given states (in the example case any of the 2) are excluded. This is useful in case different and non lymphocyte cells were co-sequenced. It should give the option to e.g. exclude B cells in the analysis of T cells in a dataset.}

\item{Parameters}{for GEX processing listed here}

\item{VDJ.out.directory}{List of paths with each element containing the path to the output of cellranger VDJ runs. This pipeline assumes that the output file names have not been changed from the default 10x settings in the /outs/ folder. This is compatible with B and T cell repertoires (both separately and simultaneously).}

\item{GEX.out.directory}{OPTIONAL list of paths with each element containing the path to the output of cellranger GEX runs. This pipeline assumes that the output file names have not been changed from the default 10x settings in the /outs/ folder. This is compatible with B and T cell repertoires (both separately and simultaneously).}

\item{sample.names}{OPTIONAL: an array of the same length as the input VDJ.out.directory list with custom names for each sample. If not provided samples will be numbered by processing order}

\item{metrics10x}{Whether to append metrics_summary.csv information provided by Cellranger for both VDJ and GEX. Defaults to T}

\item{save.csv}{Boolean. Defaults to TRUE. Whether to directly save the resuts as a comma delimited .csv file in the current working directory.}

\item{filename}{Character ending in .csv. Filename to save .csv as.}

\item{ALL_PARAMS}{Provided by VDJ_GEX_matrix function.}

\item{All_PARAMS}{Inputs provided by VDJ_GEX_matrix}
}
\value{
Single cell matrix including VDJ and GEX info

returns a single matrix where the rows are individual cells and the columns are repertoire features.

GEX matrix

List of tables, with each table containing information one one barcode
}
\description{
Processes both raw VDJ and GEX Cellranger output to compile a single cell level table containing all available information for each cell.
}
\examples{
\dontrun{
VDJ.out.directory.list <- list()
VDJ.out.directory.list[[1]] <- c("~/VDJ/S1/")
VDJ.out.directory.list[[2]] <- c("~/VDJ/S2/")
GEX.out.directory.list <- list()
GEX.out.directory.list[[1]] <- c("~/GEX/S1/")
GEX.out.directory.list[[2]] <- c("~/GEX/S2/")
VDJ_comb_gex <- VDJ_GEX_matrix(VDJ.out.directory.list = VDJ.out.directory.list,GEX.out.directory.list = GEX.out.directory.list,GEX.integrate = T,VDJ.combine = T,integrate.GEX.to.VDJ = T,integrate.VDJ.to.GEX = T,exclude.GEX.not.in.VDJ = F,filter.overlapping.barcodes.GEX = F,filter.overlapping.barcodes.VDJ = F,get.VDJ.stats = T,parallel.processing = "none",subsample.barcodes = F,trim.and.align = F,group.id = c(1,2))
}
Gives stats on number and quality of reads.
\dontrun{
stats <- VDJ_GEX_stats(VDJ.out.directory = VDJ.out.directory.list,GEX.out.directory = GEX.out.directory.list,sample.names = c(1:4),metrics10x = T,save.csv = T ,filename = "stats.csv")
}
Processes GEX in the function VDJ_GEX_matrix. Do not run as standalone
\dontrun{
Do not run as standalone!
}
Helper function called in VDJ_GEX_matrix. Do not run as standalone!
\dontrun{
Do not run as standalone!
}
}
